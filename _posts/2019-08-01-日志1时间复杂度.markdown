---
layout: post
title:  "时间复杂度"
date:   2019-08-01 17:42:32 +0800
categories: jekyll update
---

---

# 目录

* 目录
{:toc}

---

#前言

作者去了一个培训的地方,那里~~考试难到爆~~很不错,我主要总是程序怕TLE。

#引入

有时候你可能没注重看数据范围,这个细节非常重要。

##时间复杂度O()
 
###循环

接下去讲时间复杂度。


if 语句就不讲了,反正也没有那么精确。


接下来是循环
```cpp
#include <time.h>//这是测试循环100000次要多少时间
#include <stdio.h>
int main() {
	long long a=100000;
	double start,end,cost;
	start=clock();
	for (long long  i=1;i<=a;i++)
	end=clock();
	cost=end-start;
	printf("%f\n",cost);
	return 0;
}
```

从这里可以看出循环100000次时间复杂度是 O(1)。


那么1000000次应该是o(10) 但事实不是这样,事实是o(14);


证明一个固定数值并不能代表所有,所以它是可以有误差的。


那么得到一个算式(作者是windows系统,可能有些不准) 100000000次循环不一定会爆,超过~~可能~~爆掉。

###递归

递归是一个程序员必须要学会的,不过递归的时间复杂度是多少呢？

程序验证：

```cpp
#include <time.h>
#include <stdio.h>
int dg(int n)
{
	if (n==1 || n==0) return 0;
	return n+dg(n-1);
}
int main() {
	long long a=100000;
	double start,end,cost;
	start=clock();
	dg(a);
	end=clock();
	cost=end-start;
	printf("%f\n",cost);
	return 0;
}
```

程序发现递归100000层大概是o(1);


如果多加个0就凉透了。


##排序

###冒泡排序

分析一下,冒泡排序需要两重循环,大概是
\begin{equation}
o(n^{2});
\end{equation}

那么由于100000000次循环会爆掉,加上一些读入输出,交换,所以n<=200。


但冒泡作为稳定排序还是很实用的。

###快排

sort的快排是o(nlogn) 快排大概是可以n<=100000。


所以如果n<=100用冒泡,超过用快排。

#总结

好了我们时间复杂度告一段落,以后还会有补充的。886。


